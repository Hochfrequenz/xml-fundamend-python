# serializer version: 1
# name: test_create_db_and_ahbesser_view
  list([
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Nachrichten-Kopfsegment',
      'line_type': 'segment',
      'path': 'Nachrichten-Kopfsegment',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0062',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>D_0062>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Nachrichten-Referenznummer',
      'line_type': 'dataelement',
      'path': 'Nachrichten-Kopfsegment > Nachrichten-Referenznummer',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0065',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>C_S009>D_0065>UTILTS>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Netznutzungszeiten-Nachricht',
      'line_type': 'code',
      'path': 'Nachrichten-Kopfsegment > Nachrichten-Kennung > Nachrichtentyp-Kennung > Netznutzungszeiten-Nachricht',
      'pruefidentifikator': '25001',
      'qualifier': 'UTILTS',
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-00001-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0052',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>C_S009>D_0052>D>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Entwurfs-Version',
      'line_type': 'code',
      'path': 'Nachrichten-Kopfsegment > Nachrichten-Kennung > Versionsnummer des Nachrichtentyps > Entwurfs-Version',
      'pruefidentifikator': '25001',
      'qualifier': 'D',
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-00001-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0054',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>C_S009>D_0054>18A>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Ausgabe 2018 - A',
      'line_type': 'code',
      'path': 'Nachrichten-Kopfsegment > Nachrichten-Kennung > Freigabenummer des Nachrichtentyps > Ausgabe 2018 - A',
      'pruefidentifikator': '25001',
      'qualifier': '18A',
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-00001-00002-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0051',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>C_S009>D_0051>UN>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'UN/CEFACT',
      'line_type': 'code',
      'path': 'Nachrichten-Kopfsegment > Nachrichten-Kennung > Verwaltende Organisation > UN/CEFACT',
      'pruefidentifikator': '25001',
      'qualifier': 'UN',
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-00001-00003-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0057',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNH>C_S009>D_0057>1.1d>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Versionsnummer der zugrundeliegenden BDEW-Nachrichtenbeschreibung',
      'line_type': 'code',
      'path': 'Nachrichten-Kopfsegment > Nachrichten-Kennung > Anwendungscode der zustÃ¤ndigen Organisation > Versionsnummer der zugrundeliegenden BDEW-Nachrichtenbeschreibung',
      'pruefidentifikator': '25001',
      'qualifier': '1.1d',
      'segment_code': 'UNH',
      'segmentgroup_key': None,
      'sort_path': '00000-00001-00004-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'BGM>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Beginn der Nachricht',
      'line_type': 'segment',
      'path': 'Beginn der Nachricht',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'BGM',
      'segmentgroup_key': None,
      'sort_path': '00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1001',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'BGM>C_C002>D_1001>Z36>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Berechnungsformel',
      'line_type': 'code',
      'path': 'Beginn der Nachricht > Dokumenten-/Nachrichtenname > Dokumentenname, Code > Berechnungsformel',
      'pruefidentifikator': '25001',
      'qualifier': 'Z36',
      'segment_code': 'BGM',
      'segmentgroup_key': None,
      'sort_path': '00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1004',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'BGM>C_C106>D_1004>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Dokumentennummer',
      'line_type': 'dataelement',
      'path': 'Beginn der Nachricht > Dokumenten-/Nachrichten-Identifikation > Dokumentennummer',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'BGM',
      'segmentgroup_key': None,
      'sort_path': '00001-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'DTM>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Nachrichtendatum',
      'line_type': 'segment',
      'path': 'Nachrichtendatum',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'DTM',
      'segmentgroup_key': None,
      'sort_path': '00002-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_2005',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'DTM>C_C507>D_2005>137>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Dokumenten-/Nachrichtendatum/-zeit',
      'line_type': 'code',
      'path': 'Nachrichtendatum > Datum/Uhrzeit/Zeitspanne > Datums- oder Uhrzeit- oder Zeitspannen-Funktion, Qualifier > Dokumenten-/Nachrichtendatum/-zeit',
      'pruefidentifikator': '25001',
      'qualifier': '137',
      'segment_code': 'DTM',
      'segmentgroup_key': None,
      'sort_path': '00002-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [494] Das hier genannte Datum muss der Zeitpunkt sein, zu dem das Dokument erstellt wurde, oder ein Zeitpunkt, der davor liegt.
        [931] Format: ZZZ = +00
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_2380',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'DTM>C_C507>D_2380>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [931][494]',
      'line_name': 'Datum oder Uhrzeit oder Zeitspanne, Wert',
      'line_type': 'dataelement',
      'path': 'Nachrichtendatum > Datum/Uhrzeit/Zeitspanne > Datum oder Uhrzeit oder Zeitspanne, Wert',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'DTM',
      'segmentgroup_key': None,
      'sort_path': '00002-00000-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_2379',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'DTM>C_C507>D_2379>303>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'CCYYMMDDHHMMZZZ',
      'line_type': 'code',
      'path': 'Nachrichtendatum > Datum/Uhrzeit/Zeitspanne > Datums- oder Uhrzeit- oder Zeitspannen-Format, Code > CCYYMMDDHHMMZZZ',
      'pruefidentifikator': '25001',
      'qualifier': '303',
      'segment_code': 'DTM',
      'segmentgroup_key': None,
      'sort_path': '00002-00000-00002-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss',
      'line_name': 'MP-ID Absender',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>NAD>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'MP-ID Absender',
      'line_type': 'segment',
      'path': 'MP-ID Absender > MP-ID Absender',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3035',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>NAD>D_3035>MS>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Dokumenten-/Nachrichtenaussteller bzw. -absender',
      'line_type': 'code',
      'path': 'MP-ID Absender > MP-ID Absender > Beteiligter, Qualifier > Dokumenten-/Nachrichtenaussteller bzw. -absender',
      'pruefidentifikator': '25001',
      'qualifier': 'MS',
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00000-00000-00000-',
    }),
    dict({
      'bedingung': '[1] Nur MP-ID aus Sparte Strom',
      'bedingungsfehler': None,
      'data_element': 'D_3039',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>NAD>C_C082>D_3039>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1]',
      'line_name': 'MP-ID',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > MP-ID Absender > Identifikation des Beteiligten > MP-ID',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00000-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3055',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>NAD>C_C082>D_3055>9>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'GS1',
      'line_type': 'code',
      'path': 'MP-ID Absender > MP-ID Absender > Identifikation des Beteiligten > Verantwortliche Stelle fÃ¼r die Codepflege, Code > GS1',
      'pruefidentifikator': '25001',
      'qualifier': '9',
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00000-00001-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3055',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>NAD>C_C082>D_3055>293>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'DE, BDEW (Bundesverband der Energie- und Wasserwirtschaft e.V.)',
      'line_type': 'code',
      'path': 'MP-ID Absender > MP-ID Absender > Identifikation des Beteiligten > Verantwortliche Stelle fÃ¼r die Codepflege, Code > DE, BDEW (Bundesverband der Energie- und Wasserwirtschaft e.V.)',
      'pruefidentifikator': '25001',
      'qualifier': '293',
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00000-00001-00001-00001-',
    }),
    dict({
      'bedingung': '[2] Wenn SG5 STS+Z23+Z34 (Formel muss beim Absender angefragt werden) in einem SG5 IDE vorhanden',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': '''
        Muss [2]
        Kann
      ''',
      'line_name': 'Kontaktinformationen',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Kontaktinformationen',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>CTA>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Ansprechpartner',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Kontaktinformationen > Ansprechpartner',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CTA',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3139',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>CTA>D_3139>IC>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Informationskontakt',
      'line_type': 'code',
      'path': 'MP-ID Absender > Kontaktinformationen > Ansprechpartner > Funktion des Ansprechpartners, Code > Informationskontakt',
      'pruefidentifikator': '25001',
      'qualifier': 'IC',
      'segment_code': 'CTA',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3412',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>CTA>C_C056>D_3412>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Name vom Ansprechpartner',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Kontaktinformationen > Ansprechpartner > Kontaktangaben > Name vom Ansprechpartner',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CTA',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00000-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Kommunikationsverbindung',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-',
    }),
    dict({
      'bedingung': '''
        [53] Wenn im DE3155 in demselben COM der Code EM vorhanden ist
        [530] Hinweis: Es darf nur eine Information im DE3148 Ã¼bermittelt werden
        [54] Wenn im DE3155 in demselben COM der Code TE / FX / AJ / AL vorhanden ist
        [939] Format: Die Zeichenkette muss die Zeichen @ und . enthalten
        [940] Format: Die Zeichenkette muss mit dem Zeichen + beginnen und danach dÃ¼rfen nur noch Ziffern folgen
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_3148',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>C_C076>D_3148>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X (([939][53]) â¨ ([940][54])) â§ [530]',
      'line_name': 'Nummer / Adresse',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung > Kommunikationsverbindung > Nummer / Adresse',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-00000-00000-',
    }),
    dict({
      'bedingung': '[1P] --',
      'bedingungsfehler': None,
      'data_element': 'D_3155',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>C_C076>D_3155>EM>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1P0..1]',
      'line_name': 'Elektronische Post',
      'line_type': 'code',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung > Kommunikationsverbindung > Art des Kommunikationsmittels, Code > Elektronische Post',
      'pruefidentifikator': '25001',
      'qualifier': 'EM',
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-00000-00001-00000-',
    }),
    dict({
      'bedingung': '[1P] --',
      'bedingungsfehler': None,
      'data_element': 'D_3155',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>C_C076>D_3155>FX>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1P0..1]',
      'line_name': 'Telefax',
      'line_type': 'code',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung > Kommunikationsverbindung > Art des Kommunikationsmittels, Code > Telefax',
      'pruefidentifikator': '25001',
      'qualifier': 'FX',
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-00000-00001-00001-',
    }),
    dict({
      'bedingung': '[1P] --',
      'bedingungsfehler': None,
      'data_element': 'D_3155',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>C_C076>D_3155>TE>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1P0..1]',
      'line_name': 'Telefon',
      'line_type': 'code',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung > Kommunikationsverbindung > Art des Kommunikationsmittels, Code > Telefon',
      'pruefidentifikator': '25001',
      'qualifier': 'TE',
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-00000-00001-00002-',
    }),
    dict({
      'bedingung': '[1P] --',
      'bedingungsfehler': None,
      'data_element': 'D_3155',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>C_C076>D_3155>AJ>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1P0..1]',
      'line_name': 'weiteres Telefon',
      'line_type': 'code',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung > Kommunikationsverbindung > Art des Kommunikationsmittels, Code > weiteres Telefon',
      'pruefidentifikator': '25001',
      'qualifier': 'AJ',
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-00000-00001-00003-',
    }),
    dict({
      'bedingung': '[1P] --',
      'bedingungsfehler': None,
      'data_element': 'D_3155',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG3>COM>C_C076>D_3155>AL>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1P0..1]',
      'line_name': 'Handy',
      'line_type': 'code',
      'path': 'MP-ID Absender > Kontaktinformationen > Kommunikationsverbindung > Kommunikationsverbindung > Art des Kommunikationsmittels, Code > Handy',
      'pruefidentifikator': '25001',
      'qualifier': 'AL',
      'segment_code': 'COM',
      'segmentgroup_key': 'SG3',
      'sort_path': '00003-00001-00001-00000-00001-00004-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG2>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss',
      'line_name': 'MP-ID EmpfÃ¤nger',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > MP-ID EmpfÃ¤nger',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00002-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG2>NAD>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'MP-ID EmpfÃ¤nger',
      'line_type': 'segment',
      'path': 'MP-ID Absender > MP-ID EmpfÃ¤nger > MP-ID EmpfÃ¤nger',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00002-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3035',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG2>NAD>D_3035>MR>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'NachrichtenempfÃ¤nger',
      'line_type': 'code',
      'path': 'MP-ID Absender > MP-ID EmpfÃ¤nger > MP-ID EmpfÃ¤nger > Beteiligter, Qualifier > NachrichtenempfÃ¤nger',
      'pruefidentifikator': '25001',
      'qualifier': 'MR',
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00002-00000-00000-00000-',
    }),
    dict({
      'bedingung': '[1] Nur MP-ID aus Sparte Strom',
      'bedingungsfehler': None,
      'data_element': 'D_3039',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG2>NAD>C_C082>D_3039>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [1]',
      'line_name': 'MP-ID',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > MP-ID EmpfÃ¤nger > MP-ID EmpfÃ¤nger > Identifikation des Beteiligten > MP-ID',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00002-00000-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3055',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG2>NAD>C_C082>D_3055>9>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'GS1',
      'line_type': 'code',
      'path': 'MP-ID Absender > MP-ID EmpfÃ¤nger > MP-ID EmpfÃ¤nger > Identifikation des Beteiligten > Verantwortliche Stelle fÃ¼r die Codepflege, Code > GS1',
      'pruefidentifikator': '25001',
      'qualifier': '9',
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00002-00000-00001-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3055',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG2>NAD>C_C082>D_3055>293>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'DE, BDEW (Bundesverband der Energie- und Wasserwirtschaft e.V.)',
      'line_type': 'code',
      'path': 'MP-ID Absender > MP-ID EmpfÃ¤nger > MP-ID EmpfÃ¤nger > Identifikation des Beteiligten > Verantwortliche Stelle fÃ¼r die Codepflege, Code > DE, BDEW (Bundesverband der Energie- und Wasserwirtschaft e.V.)',
      'pruefidentifikator': '25001',
      'qualifier': '293',
      'segment_code': 'NAD',
      'segmentgroup_key': 'SG2',
      'sort_path': '00003-00002-00000-00001-00001-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss',
      'line_name': 'Vorgang',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>IDE>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Vorgang',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Vorgang',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'IDE',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7495',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>IDE>D_7495>24>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Transaktion',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Vorgang > Objekt, Qualifier > Transaktion',
      'pruefidentifikator': '25001',
      'qualifier': '24',
      'segment_code': 'IDE',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7402',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>IDE>C_C206>D_7402>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Vorgangsnummer',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Vorgang > Identifikationsnummer > Vorgangsnummer',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'IDE',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00000-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>LOC>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Meldepunkt',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Meldepunkt',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'LOC',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_3227',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>LOC>D_3227>172>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Meldepunkt',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Meldepunkt > Ortsangabe, Qualifier > Meldepunkt',
      'pruefidentifikator': '25001',
      'qualifier': '172',
      'segment_code': 'LOC',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00001-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [501] Hinweis: Verwendung der ID der Marktlokation
        [529] Hinweis: Verwendung der ID der Netzlokation
        [950] Format: Marktlokations-ID
        [960] Format: Netzlokations-ID
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_3225',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>LOC>C_C517>D_3225>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [950] [501] â» [960] [529]',
      'line_name': 'Identifikator',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Meldepunkt > Ortsangabe > Identifikator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'LOC',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00001-00001-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>DTM>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'GÃ¼ltig ab',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > GÃ¼ltig ab',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'DTM',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00002-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_2005',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>DTM>C_C507>D_2005>157>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'GÃ¼ltigkeit, Beginndatum',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > GÃ¼ltig ab > Datum/Uhrzeit/Zeitspanne > Datums- oder Uhrzeit- oder Zeitspannen-Funktion, Qualifier > GÃ¼ltigkeit, Beginndatum',
      'pruefidentifikator': '25001',
      'qualifier': '157',
      'segment_code': 'DTM',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00002-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [500] Hinweis: Zeitpunkt, ab dem die Berechnungsformel anzuwenden ist
        [931] Format: ZZZ = +00
        [UB1] ([931] â§ [932] [490]) â» ([931] â§ [933] [491])
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_2380',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>DTM>C_C507>D_2380>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [931] [500] â§ [UB1]',
      'line_name': 'Datum oder Uhrzeit oder Zeitspanne, Wert',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > GÃ¼ltig ab > Datum/Uhrzeit/Zeitspanne > Datum oder Uhrzeit oder Zeitspanne, Wert',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'DTM',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00002-00000-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_2379',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>DTM>C_C507>D_2379>303>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'CCYYMMDDHHMMZZZ',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > GÃ¼ltig ab > Datum/Uhrzeit/Zeitspanne > Datums- oder Uhrzeit- oder Zeitspannen-Format, Code > CCYYMMDDHHMMZZZ',
      'pruefidentifikator': '25001',
      'qualifier': '303',
      'segment_code': 'DTM',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00002-00000-00002-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>STS>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Status der Berechnungsformel',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Status der Berechnungsformel',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'STS',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00003-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_9015',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>STS>C_C601>D_9015>Z23>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Status der Berechnungsformel',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Status der Berechnungsformel > Statuskategorie > Statuskategorie, Code > Status der Berechnungsformel',
      'pruefidentifikator': '25001',
      'qualifier': 'Z23',
      'segment_code': 'STS',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00003-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_4405',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>STS>C_C555>D_4405>Z33>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Berechnungsformel angefÃ¼gt',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Status der Berechnungsformel > Status > Status, Code > Berechnungsformel angefÃ¼gt',
      'pruefidentifikator': '25001',
      'qualifier': 'Z33',
      'segment_code': 'STS',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00003-00001-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_4405',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>STS>C_C555>D_4405>Z34>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Berechnungsformel muss beim Absender angefragt werden',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Status der Berechnungsformel > Status > Status, Code > Berechnungsformel muss beim Absender angefragt werden',
      'pruefidentifikator': '25001',
      'qualifier': 'Z34',
      'segment_code': 'STS',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00003-00001-00000-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_4405',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>STS>C_C555>D_4405>Z40>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Berechnungsformel besitzt keine Rechenoperation',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Status der Berechnungsformel > Status > Status, Code > Berechnungsformel besitzt keine Rechenoperation',
      'pruefidentifikator': '25001',
      'qualifier': 'Z40',
      'segment_code': 'STS',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00003-00001-00000-00002-',
    }),
    dict({
      'bedingung': '[18] Wenn MP-ID in SG2 NAD+MR (NachrichtenempfÃ¤nger) in der Rolle LF',
      'bedingungsfehler': None,
      'data_element': 'D_4405',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>STS>C_C555>D_4405>Z41>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [18]',
      'line_name': 'Berechnungsformel nicht erforderlich',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Status der Berechnungsformel > Status > Status, Code > Berechnungsformel nicht erforderlich',
      'pruefidentifikator': '25001',
      'qualifier': 'Z41',
      'segment_code': 'STS',
      'segmentgroup_key': 'SG5',
      'sort_path': '00003-00003-00003-00001-00000-00003-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG6>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss',
      'line_name': 'PrÃ¼fidentifikator',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > PrÃ¼fidentifikator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG6',
      'sort_path': '00003-00003-00004-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG6>RFF>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'PrÃ¼fidentifikator',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > PrÃ¼fidentifikator > PrÃ¼fidentifikator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG6',
      'sort_path': '00003-00003-00004-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1153',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG6>RFF>C_C506>D_1153>Z13>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'PrÃ¼fidentifikator',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > PrÃ¼fidentifikator > PrÃ¼fidentifikator > Referenz > Referenz, Qualifier > PrÃ¼fidentifikator',
      'pruefidentifikator': '25001',
      'qualifier': 'Z13',
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG6',
      'sort_path': '00003-00003-00004-00000-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1154',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG6>RFF>C_C506>D_1154>25001>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Berechnungsformel',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > PrÃ¼fidentifikator > PrÃ¼fidentifikator > Referenz > Referenz, Identifikation > Berechnungsformel',
      'pruefidentifikator': '25001',
      'qualifier': '25001',
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG6',
      'sort_path': '00003-00003-00004-00000-00000-00001-00000-',
    }),
    dict({
      'bedingung': '[51] Wenn in SG5 LOC+172 DE3225 (Meldepunkt) die ID einer Marktlokation angegeben ist.',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG7>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss [51]',
      'line_name': 'Lieferrichtung',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Lieferrichtung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG7',
      'sort_path': '00003-00003-00005-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG7>CCI>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Lieferrichtung',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Lieferrichtung > Lieferrichtung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG7',
      'sort_path': '00003-00003-00005-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7059',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG7>CCI>D_7059>Z30>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Lieferrichtung',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Lieferrichtung > Lieferrichtung > Klassentyp, Code > Lieferrichtung',
      'pruefidentifikator': '25001',
      'qualifier': 'Z30',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG7',
      'sort_path': '00003-00003-00005-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG7>CCI>C_C240>D_7037>Z06>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Erzeugung',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Lieferrichtung > Lieferrichtung > Merkmalsbeschreibung > Merkmal, Code > Erzeugung',
      'pruefidentifikator': '25001',
      'qualifier': 'Z06',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG7',
      'sort_path': '00003-00003-00005-00000-00001-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG7>CCI>C_C240>D_7037>Z07>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Verbrauch',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Lieferrichtung > Lieferrichtung > Merkmalsbeschreibung > Merkmal, Code > Verbrauch',
      'pruefidentifikator': '25001',
      'qualifier': 'Z07',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG7',
      'sort_path': '00003-00003-00005-00000-00001-00000-00001-',
    }),
    dict({
      'bedingung': '[3] Wenn SG5 STS+Z23+Z33 (Formel angefÃ¼gt) vorhanden',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss [3]',
      'line_name': 'Energiemenge der Markt- bzw. Netzlokation',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Energiemenge der Markt- bzw. Netzlokation',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00006-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SEQ>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Energiemenge der Markt- bzw. Netzlokation',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Energiemenge der Markt- bzw. Netzlokation > Energiemenge der Markt- bzw. Netzlokation',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'SEQ',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00006-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1229',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SEQ>D_1229>Z36>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Energiemenge der Markt- bzw. Netzlokation',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Energiemenge der Markt- bzw. Netzlokation > Energiemenge der Markt- bzw. Netzlokation > Handlung, Code > Energiemenge der Markt- bzw. Netzlokation',
      'pruefidentifikator': '25001',
      'qualifier': 'Z36',
      'segment_code': 'SEQ',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00006-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Referenz auf einen Rechenschritt',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Energiemenge der Markt- bzw. Netzlokation > Referenz auf einen Rechenschritt',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00006-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1153',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>C_C506>D_1153>Z23>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Rechenschritt',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Energiemenge der Markt- bzw. Netzlokation > Referenz auf einen Rechenschritt > Referenz > Referenz, Qualifier > Rechenschritt',
      'pruefidentifikator': '25001',
      'qualifier': 'Z23',
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00006-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [8] Rechenschrittidentifikator aus einem SG8 SEQ+Z37 (Bestandteil des Rechenschritts) DE1050 desselben SG5 IDE+24
        [913] Format: MÃ¶gliche Werte: 1 bis 99999
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_1154',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>C_C506>D_1154>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [913] [8]',
      'line_name': 'Rechenschrittidentifikator',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Energiemenge der Markt- bzw. Netzlokation > Referenz auf einen Rechenschritt > Referenz > Rechenschrittidentifikator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00006-00001-00000-00001-',
    }),
    dict({
      'bedingung': '[3] Wenn SG5 STS+Z23+Z33 (Formel angefÃ¼gt) vorhanden',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss [3]',
      'line_name': 'Bestandteil des Rechenschritts',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SEQ>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Bestandteil des Rechenschritts',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Bestandteil des Rechenschritts',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'SEQ',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1229',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SEQ>D_1229>Z37>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Bestandteil des Rechenschritts',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Bestandteil des Rechenschritts > Handlung, Code > Bestandteil des Rechenschritts',
      'pruefidentifikator': '25001',
      'qualifier': 'Z37',
      'segment_code': 'SEQ',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00000-00000-00000-',
    }),
    dict({
      'bedingung': '[913] Format: MÃ¶gliche Werte: 1 bis 99999',
      'bedingungsfehler': None,
      'data_element': 'D_1050',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SEQ>C_C286>D_1050>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [913]',
      'line_name': 'Rechenschrittidentifikator',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Bestandteil des Rechenschritts > Information Ã¼ber eine Folge > Rechenschrittidentifikator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'SEQ',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00000-00001-00000-',
    }),
    dict({
      'bedingung': '[6] Wenn das SG8 RFF+Z23 (Referenz auf Rechenschritt) in derselben SG8 SEQ+Z37 nicht vorhanden',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss [6]',
      'line_name': 'Referenz auf die ID einer Messlokation',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Referenz auf die ID einer Messlokation',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1153',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>C_C506>D_1153>Z19>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Messlokation',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Referenz auf die ID einer Messlokation > Referenz > Referenz, Qualifier > Messlokation',
      'pruefidentifikator': '25001',
      'qualifier': 'Z19',
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [502] Hinweis: Verwendung der ID der Messlokation
        [951] Format: ZÃ¤hlpunktbezeichnung
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_1154',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>C_C506>D_1154>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [951] [502]',
      'line_name': 'ID einer Messlokation',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Referenz auf die ID einer Messlokation > Referenz > ID einer Messlokation',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00001-00000-00001-',
    }),
    dict({
      'bedingung': '[5] Wenn das SG8 RFF+Z19 (Referenz auf eine Messlokation) in derselben SG8 SEQ+Z37 nicht vorhanden',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss [5]',
      'line_name': 'Referenz auf einen Rechenschritt',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Referenz auf einen Rechenschritt',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00002-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_1153',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>C_C506>D_1153>Z23>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Rechenschritt',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Referenz auf einen Rechenschritt > Referenz > Referenz, Qualifier > Rechenschritt',
      'pruefidentifikator': '25001',
      'qualifier': 'Z23',
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00002-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [8] Rechenschrittidentifikator aus einem SG8 SEQ+Z37 (Bestandteil des Rechenschritts) DE1050 desselben SG5 IDE+24
        [9] Der hier angegebene Rechenschrittidentifikator darf nicht identisch mit dem Rechenschrittidentifikator aus diesem SG8 SEQ+Z37 DE1050 sein
        [913] Format: MÃ¶gliche Werte: 1 bis 99999
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_1154',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>RFF>C_C506>D_1154>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [913] [8] â§ [9]',
      'line_name': 'Rechenschrittidentifikator',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Referenz auf einen Rechenschritt > Referenz > Rechenschrittidentifikator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'RFF',
      'segmentgroup_key': 'SG8',
      'sort_path': '00003-00003-00007-00002-00000-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss',
      'line_name': 'Mathematischer Operator',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Mathematischer Operator',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Mathematischer Operator',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>C_C240>D_7037>Z86>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Mathematischer Operator',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Mathematischer Operator > Merkmalsbeschreibung > Merkmal, Code > Mathematischer Operator',
      'pruefidentifikator': '25001',
      'qualifier': 'Z86',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00000-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Operator / Operation',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Operator / Operation',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00001-',
    }),
    dict({
      'bedingung': '''
        [11] Wenn in SG8 SEQ+Z37 SG9 CCI+++Z86 CAV+Z69/Z70 (Addition / Subtraktion) vorhanden, darf es in dem Vorgang beliebig viele weitere SG8 SEQ+Z37 mit identischem Rechenschrittidentifikator geben, die jedoch ausschlieÃlich die Operatoren Z69/Z70 enthalten dÃ¼rfen
        [15] Wenn in einem SG5 IDE+24 nur eine SEQ+Z37 mit einer SG8 RFF+Z19 (Messlokation) vorhanden ist
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z69>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [11] â» [15]',
      'line_name': 'Addition',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Operator / Operation > Merkmalswert > Merkmalswert, Code > Addition',
      'pruefidentifikator': '25001',
      'qualifier': 'Z69',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': '[11] Wenn in SG8 SEQ+Z37 SG9 CCI+++Z86 CAV+Z69/Z70 (Addition / Subtraktion) vorhanden, darf es in dem Vorgang beliebig viele weitere SG8 SEQ+Z37 mit identischem Rechenschrittidentifikator geben, die jedoch ausschlieÃlich die Operatoren Z69/Z70 enthalten dÃ¼rfen',
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z70>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [11]',
      'line_name': 'Subtraktion',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Operator / Operation > Merkmalswert > Merkmalswert, Code > Subtraktion',
      'pruefidentifikator': '25001',
      'qualifier': 'Z70',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00001-00000-00000-00001-',
    }),
    dict({
      'bedingung': '[13] Wenn in SG8 SEQ+Z37 SG9 CCI+++Z86 CAV+Z80/Z81 (Divisor / Dividend) vorhanden, muss in diesem Vorgang genau eine zweite SG8 SEQ+Z37 mit identischen Rechenschrittidentifikator vorhanden sein, sodass das eine SG8 SEQ+Z37 den Operator Z80 (Divisor) und das andere SG8 SEQ+Z37 den Operator Z81 (Dividend) enthÃ¤lt',
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z80>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [13]',
      'line_name': 'Divisor',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Operator / Operation > Merkmalswert > Merkmalswert, Code > Divisor',
      'pruefidentifikator': '25001',
      'qualifier': 'Z80',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00001-00000-00000-00002-',
    }),
    dict({
      'bedingung': '[13] Wenn in SG8 SEQ+Z37 SG9 CCI+++Z86 CAV+Z80/Z81 (Divisor / Dividend) vorhanden, muss in diesem Vorgang genau eine zweite SG8 SEQ+Z37 mit identischen Rechenschrittidentifikator vorhanden sein, sodass das eine SG8 SEQ+Z37 den Operator Z80 (Divisor) und das andere SG8 SEQ+Z37 den Operator Z81 (Dividend) enthÃ¤lt',
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z81>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [13]',
      'line_name': 'Dividend',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Operator / Operation > Merkmalswert > Merkmalswert, Code > Dividend',
      'pruefidentifikator': '25001',
      'qualifier': 'Z81',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00001-00000-00000-00003-',
    }),
    dict({
      'bedingung': '[14] Wenn in SG8 SEQ+Z37 SG9 CCI+++Z86 CAV+Z82 (Faktor) vorhanden, darf es in dem Vorgang beliebig viele weitere SG8 SEQ+Z37 mit identischem Rechenschrittidentifikator geben, die jedoch ausschlieÃlich CAV+Z82 enthalten',
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z82>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [14]',
      'line_name': 'Faktor',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Mathematischer Operator > Operator / Operation > Merkmalswert > Merkmalswert, Code > Faktor',
      'pruefidentifikator': '25001',
      'qualifier': 'Z82',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00003-00001-00000-00000-00004-',
    }),
    dict({
      'bedingung': '[7] Wenn in derselben SG8 SEQ+Z37 das SG8 RFF+Z19 (Referenz auf eine Messlokation) vorhanden',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Muss [7]',
      'line_name': 'Energieflussrichtung',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Energieflussrichtung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00004-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Energieflussrichtung',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Energieflussrichtung > Energieflussrichtung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00004-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>C_C240>D_7037>Z87>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Energieflussrichtung',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Energieflussrichtung > Energieflussrichtung > Merkmalsbeschreibung > Merkmal, Code > Energieflussrichtung',
      'pruefidentifikator': '25001',
      'qualifier': 'Z87',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00004-00000-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Energieflussrichtung',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Energieflussrichtung > Energieflussrichtung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00004-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z71>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Verbrauch',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Energieflussrichtung > Energieflussrichtung > Merkmalswert > Merkmalswert, Code > Verbrauch',
      'pruefidentifikator': '25001',
      'qualifier': 'Z71',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00004-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z72>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Erzeugung',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Energieflussrichtung > Energieflussrichtung > Merkmalswert > Merkmalswert, Code > Erzeugung',
      'pruefidentifikator': '25001',
      'qualifier': 'Z72',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00004-00001-00000-00000-00001-',
    }),
    dict({
      'bedingung': '''
        [10] wenn vorhanden
        [7] Wenn in derselben SG8 SEQ+Z37 das SG8 RFF+Z19 (Referenz auf eine Messlokation) vorhanden
      ''',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Soll [10] â§ [7]',
      'line_name': 'Verlustfaktor Trafo',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Trafo',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00005-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Verlustfaktor Trafo',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Trafo > Verlustfaktor Trafo',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00005-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>C_C240>D_7037>Z16>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Verlustfaktor Trafo',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Trafo > Verlustfaktor Trafo > Merkmalsbeschreibung > Merkmal, Code > Verlustfaktor Trafo',
      'pruefidentifikator': '25001',
      'qualifier': 'Z16',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00005-00000-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Verlustfaktor Trafo',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Trafo > Verlustfaktor Trafo',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00005-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z28>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Verlustfaktor',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Trafo > Verlustfaktor Trafo > Merkmalswert > Merkmalswert, Code > Verlustfaktor',
      'pruefidentifikator': '25001',
      'qualifier': 'Z28',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00005-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [912] Format: Wert kann mit maximal 6 Nachkommastellen angegeben werden
        [914] Format: MÃ¶glicher Wert: > 0
        [915] Format: MÃ¶glicher Wert: â  1
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_7110',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7110>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [912] â§ [914] â§ [915]',
      'line_name': 'Verlustfaktor Trafo',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Trafo > Verlustfaktor Trafo > Merkmalswert > Verlustfaktor Trafo',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00005-00001-00000-00001-',
    }),
    dict({
      'bedingung': '''
        [10] wenn vorhanden
        [7] Wenn in derselben SG8 SEQ+Z37 das SG8 RFF+Z19 (Referenz auf eine Messlokation) vorhanden
      ''',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Soll [10] â§ [7]',
      'line_name': 'Verlustfaktor Leitung',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Leitung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00006-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Verlustfaktor Leitung',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Leitung > Verlustfaktor Leitung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00006-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>C_C240>D_7037>ZB2>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Verlustfaktor Leitung',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Leitung > Verlustfaktor Leitung > Merkmalsbeschreibung > Merkmal, Code > Verlustfaktor Leitung',
      'pruefidentifikator': '25001',
      'qualifier': 'ZB2',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00006-00000-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Verlustfaktor Leitung',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Leitung > Verlustfaktor Leitung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00006-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>Z28>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Verlustfaktor',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Leitung > Verlustfaktor Leitung > Merkmalswert > Merkmalswert, Code > Verlustfaktor',
      'pruefidentifikator': '25001',
      'qualifier': 'Z28',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00006-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [912] Format: Wert kann mit maximal 6 Nachkommastellen angegeben werden
        [914] Format: MÃ¶glicher Wert: > 0
        [915] Format: MÃ¶glicher Wert: â  1
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_7110',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7110>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [912] â§ [914] â§ [915]',
      'line_name': 'Verlustfaktor Leitung',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Verlustfaktor Leitung > Verlustfaktor Leitung > Merkmalswert > Verlustfaktor Leitung',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00006-00001-00000-00001-',
    }),
    dict({
      'bedingung': '''
        [10] wenn vorhanden
        [7] Wenn in derselben SG8 SEQ+Z37 das SG8 RFF+Z19 (Referenz auf eine Messlokation) vorhanden
      ''',
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>',
      'is_on_uebertragungsdatei_level': None,
      'line_ahb_status': 'Soll [10] â§ [7]',
      'line_name': 'Aufteilungsfaktor Energiemenge',
      'line_type': 'segment_group',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Aufteilungsfaktor Energiemenge',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': None,
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00007-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Aufteilungsfaktor Energiemenge',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Aufteilungsfaktor Energiemenge > Aufteilungsfaktor Energiemenge',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00007-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7037',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CCI>C_C240>D_7037>ZG6>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Aufteilungsfaktor Energiemenge',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Aufteilungsfaktor Energiemenge > Aufteilungsfaktor Energiemenge > Merkmalsbeschreibung > Merkmal, Code > Aufteilungsfaktor Energiemenge',
      'pruefidentifikator': '25001',
      'qualifier': 'ZG6',
      'segment_code': 'CCI',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00007-00000-00000-00000-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Aufteilungsfaktor Energiemenge',
      'line_type': 'segment',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Aufteilungsfaktor Energiemenge > Aufteilungsfaktor Energiemenge',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00007-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_7111',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7111>ZH6>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Aufteilungsfaktor Energiemenge',
      'line_type': 'code',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Aufteilungsfaktor Energiemenge > Aufteilungsfaktor Energiemenge > Merkmalswert > Merkmalswert, Code > Aufteilungsfaktor Energiemenge',
      'pruefidentifikator': '25001',
      'qualifier': 'ZH6',
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00007-00001-00000-00000-00000-',
    }),
    dict({
      'bedingung': '''
        [912] Format: Wert kann mit maximal 6 Nachkommastellen angegeben werden
        [914] Format: MÃ¶glicher Wert: > 0
        [969] Format: MÃ¶glicher Wer: â¤ 1
      ''',
      'bedingungsfehler': None,
      'data_element': 'D_7110',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'SG2>SG5>SG8>SG9>CAV>C_C889>D_7110>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X [914] â§ [969] â§ [912]',
      'line_name': 'Aufteilungsfaktor Energiemenge',
      'line_type': 'dataelement',
      'path': 'MP-ID Absender > Vorgang > Bestandteil des Rechenschritts > Aufteilungsfaktor Energiemenge > Aufteilungsfaktor Energiemenge > Merkmalswert > Aufteilungsfaktor Energiemenge',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'CAV',
      'segmentgroup_key': 'SG9',
      'sort_path': '00003-00003-00007-00007-00001-00000-00001-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': None,
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNT>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'Muss',
      'line_name': 'Nachrichten-Endesegment',
      'line_type': 'segment',
      'path': 'Nachrichten-Endesegment',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'UNT',
      'segmentgroup_key': None,
      'sort_path': '00004-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0074',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNT>D_0074>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Anzahl der Segmente in einer Nachricht',
      'line_type': 'dataelement',
      'path': 'Nachrichten-Endesegment > Anzahl der Segmente in einer Nachricht',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'UNT',
      'segmentgroup_key': None,
      'sort_path': '00004-00000-',
    }),
    dict({
      'bedingung': None,
      'bedingungsfehler': None,
      'data_element': 'D_0062',
      'description': 'Berechnungsformel',
      'direction': 'NB an MSB / LF',
      'format': 'UTILTS',
      'format_version': 'FV2310',
      'id_path': 'UNT>D_0062>',
      'is_on_uebertragungsdatei_level': False,
      'line_ahb_status': 'X',
      'line_name': 'Nachrichten-Referenznummer',
      'line_type': 'dataelement',
      'path': 'Nachrichten-Endesegment > Nachrichten-Referenznummer',
      'pruefidentifikator': '25001',
      'qualifier': None,
      'segment_code': 'UNT',
      'segmentgroup_key': None,
      'sort_path': '00004-00001-',
    }),
  ])
# ---
